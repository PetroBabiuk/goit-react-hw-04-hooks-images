{"version":3,"sources":["components/Searchbar/Searchbar.js","components/Button/Button.js","components/ImageGalleryItem/ImageGalleryItem.js","servises/picturesApi.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","inputValue","handleInputChange","e","setState","currentTarget","value","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","Button","onClick","ImageGalleryItem","images","map","image","src","webformatURL","alt","tags","id","fetchPicture","query","page","a","fetch","response","ok","json","Promise","reject","Error","ImageGallery","pages","status","autoScroll","window","scrollTo","top","document","documentElement","scrollHeight","behavior","handleLoadMore","prevState","resetPage","prevProps","prevQuery","prevPage","nextQuery","nextPage","picturesApi","then","totalHits","hits","catch","color","height","width","message","modalRoot","querySelector","Modal","handleKeyDown","code","onClose","handleOverlayClick","target","addEventListener","removeEventListener","modalImage","createPortal","largeImageURL","App","showModal","openModal","closeModal","getQuery","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7043556f.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { toast } from 'react-toastify';\n\nclass Searchbar extends Component {\n    state = {\n        inputValue: '',\n    };\n\n    handleInputChange = e => {\n        this.setState({ inputValue: e.currentTarget.value });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        if (this.state.inputValue.trim() === '') {\n          return toast.error('Please do not use empty string, you have to write something');\n        }\n\n        this.props.onSubmit(this.state.inputValue);\n        this.setState({ inputValue: '' });\n    };\n\n    \n    render() {\n        return (\n            <header className=\"Searchbar\">\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n                    <button type=\"submit\" className=\"SearchForm-button\">\n                        <span className=\"SearchForm-button-label\">Search</span>\n                    </button>\n\n                    <input\n                        className=\"SearchForm-input\"\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search images and photos\"\n                        value={this.state.inputValue}\n                        onChange={this.handleInputChange}\n                        />\n                </form>\n            </header>\n        );\n    };\n};\n\nexport default Searchbar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ onClick }) => (\n    <button className=\"Button\" onClick={onClick}>Load more</button>\n);\n\nButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;","import PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ images, onClick }) => {\n    return (\n        images.map(image => (\n            <li key={image.id} className=\"ImageGalleryItem\">\n                <img onClick={() => onClick(image)} src={image.webformatURL} alt={image.tags} className=\"ImageGalleryItem-image\" />\n            </li>\n        )) \n    )\n};\n\nImageGalleryItem.propTypes = {\n    images: PropTypes.arrayOf(PropTypes.object),\n    onClick: PropTypes.func,\n};\n\nexport default ImageGalleryItem;","export default async function fetchPicture (query, page) {\n    const response = await fetch(`https://pixabay.com/api/?q=${query}&page=${page}&key=22394687-5b263f11c9e1c3bf9700990e1&image_type=photo&orientation=horizontal&per_page=12`);\n    if (response.ok) {\n        return response.json();\n    }\n    return await Promise.reject(new Error(`Sorry, but something was wrong,`));\n}","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from 'react-loader-spinner';\nimport Button from 'components/Button';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport picturesApi from '../../servises/picturesApi';\n\nclass ImageGallery extends Component {\n    static propTypes = {\n    query: PropTypes.string,\n    onClick: PropTypes.func,\n  };\n\n    state = {\n        images: [],\n        error: null,\n        pages: 0,\n        page: 1,\n        status: 'idle',\n    };\n\n    async componentDidUpdate(prevProps, prevState) {\n        const prevQuery = prevProps.query;\n        const prevPage = prevState.page;\n        const nextQuery = this.props.query;\n        const nextPage = this.state.page;\n\n        if (prevQuery !== nextQuery) {\n            this.resetPage();\n            this.setState({ status: 'pending', page: 1 })\n            await picturesApi(nextQuery, 1)\n                .then(images => {\n                    if (images.totalHits === 0) {\n                        throw new Error(`Nothing with name ${nextQuery} was not found`);\n                    }\n                    this.setState((prevState) => ({\n                        images: [...images.hits],\n                        status: 'resolved',\n                        pages: images.totalHits/12,\n                    }));\n                })\n                .catch(error => this.setState({ error, status: 'rejected' }));\n            this.autoScroll();\n        }\n\n        if (prevPage !== nextPage && nextPage > 1) {\n            this.setState({ status: 'another-pending'})\n            await picturesApi(nextQuery, nextPage)\n                .then(images => {\n                    this.setState((prevState) => ({ images: [...prevState.images, ...images.hits], status: 'resolved', }));\n                })\n                .catch(error => this.setState({ error, status: 'rejected' }));\n             this.autoScroll();\n        }\n    }\n\n    autoScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n    handleLoadMore = () => {\n        this.setState((prevState) => {\n            return { page: prevState.page + 1 }\n        })\n    };\n    \n    resetPage = () => {\n        this.setState({page: 1})\n    }\n\n    render() {\n        const { images, error, status, pages, page} = this.state;\n\n        if (status === 'idle') {\n            return (\n                <h1>Please, enter something</h1>\n            );\n        }\n\n        if (status === 'pending') {\n            return (\n                <Loader\n                    type=\"ThreeDots\"\n                    color=\"#3f51b5\"\n                    height={280}\n                    width={280}\n                />\n            );\n        }\n\n        if (status === 'another-pending') {\n            return (\n                <>\n                    <ul className=\"ImageGallery\">\n                        <ImageGalleryItem images={images} onClick={this.props.onClick} />\n                    </ul>\n                    <Loader\n                        type=\"ThreeDots\"\n                        color=\"#3f51b5\"\n                        height={280}\n                        width={280}\n                    />\n                </>\n            );\n        }\n\n        if (status === 'rejected') {\n            return (\n                <h1>{error.message}</h1>\n            )\n        }\n\n        if (status === 'resolved') {\n            return (\n                <>\n                    <ul className=\"ImageGallery\">\n                        <ImageGalleryItem images={images} onClick={this.props.onClick} />\n                    </ul>\n                    {pages >= page ? <Button onClick={this.handleLoadMore} /> : <></>}\n                </>\n            );\n        }\n    }\n}\n\nImageGallery.propTypes = {\n    images: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default ImageGallery;","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n    static propTypes = {\n    modalImage: PropTypes.object,\n    onClose: PropTypes.func,\n  };\n\n    componentDidMount() {\n        window.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = e => {\n        if (e.code === 'Escape') {\n            this.props.onClose();\n        }\n    }\n\n    handleOverlayClick = e => {\n        if (e.currentTarget === e.target) {\n            this.props.onClose();\n        }\n    }\n\n    render() {\n        const { modalImage} = this.props;\n        return createPortal(<div className=\"Overlay\" onClick={this.handleOverlayClick}>\n                <div className=\"Modal\">\n                    <img src={modalImage.largeImageURL} alt={modalImage.tags} />\n                </div>\n            </div>, modalRoot);\n    }\n}    \n\nexport default Modal;","import React, {Component} from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport './App.css';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Modal from './components/Modal';\n\nclass App extends Component {\n  static propTypes = {};\n\n  state = {\n    query: '',\n    showModal: false,\n    modalImage: '',\n  };\n\n  openModal = (modalImage) => {\n    this.setState({\n      showModal: true,\n      modalImage,\n    })\n  }\n  \n  closeModal = () => {\n    this.setState({ showModal: false })\n  };\n\n  getQuery = query => {\n    this.setState({ query });\n  }\n\n  render() {\n    const { query, showModal, modalImage } = this.state;\n    return (\n      <div>\n        {showModal && <Modal modalImage={modalImage} onClose={this.closeModal} />}\n        <Searchbar onSubmit={this.getQuery} />\n        {/* <h1>Please enter something in input</h1> */}\n        <ImageGallery query={query} onClick={this.openModal} />\n        {/* <h1>{error.message}</h1> */}\n        <ToastContainer />\n      </div>   \n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}